---
openapi: 3.0.0
info:
    title: ToDo API
    description: ToDo
    contact:
        email: johannes@sch.8.de
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0.1
servers:
    - url: https://sch-8.de/api/todo
      description: Test server (node.js)
    - url: https://virtserver.swaggerhub.com/johannes3/ToDo/1.0.0
      description: SwaggerHub API Auto Mocking

tags:
    - name: tasks
      description: Tasks to be done

paths:
    /tasks:
        get:
            tags:
                - tasks
            summary: get list of tasks
            description: |
                Get all tasks currently defined
            operationId: getTasks
            responses:
                '200':
                    description: list of all tasks
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/taskItemREAD'
                '500':
                    description: Internal error
        post:
            tags:
                - tasks
            summary: add a task to the task list
            description: Adds an item to the system
            operationId: addTask
            requestBody:
                $ref: '#/components/requestBodies/CreateOrUpdate'
            responses:
                '201':
                    description: task created
                '400':
                    description: invalid input, object invalid
                '500':
                    description: Internal error, too many tasks

    /tasks/{tid}:
        parameters:
            - $ref: '#/components/parameters/TaskId'
        get:
            tags:
                - tasks
            summary: get a specific task
            description: Get the task specified by its id
            operationId: getTask
            responses:
                '200':
                    description: a task
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/taskItemREAD'
                '404':
                    description: task not found or invalid task id
                '500':
                    description: Internal error
        put:
            tags:
                - tasks
            summary: update a task
            operationId: changeTask
            requestBody:
                $ref: '#/components/requestBodies/CreateOrUpdate'
            responses:
                '200':
                    description: modified task
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/taskItemREAD'
                '400':
                    description: malformed data
                '404':
                    description: task not found or invalid task id
                '500':
                    description: Internal error
        delete:
            tags:
                - tasks
            summary: delete a specific task
            operationId: deleteTask
            responses:
                '204':
                    description: Task successfully deleted
                '404':
                    description: task not found or invalid task id
                '500':
                    description: Internal error

components:
    parameters:
        TaskId:
            name: tid
            in: path
            required: true
            schema:
                type: integer
            description: id of the task

    requestBodies:
        CreateOrUpdate:
            description: task to add or change
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/taskItemWRITE'

    schemas:
        taskItem:
            type: object
            properties:
                name:
                    type: string
                    example: 'Create an OpenApi defintion'
                description:
                    type: string
                    example: 'Use swagger and or Postman'
                dueDate:
                    type: string
                    format: date-time
                    example: '2016-08-29T09:12:33.001Z'
                user:
                    type: number
                    example: 55
        taskItemWRITE:
            allOf: # name is required, slug is optional and id is not available
                - $ref: '#/components/schemas/taskItem'
        taskItemREAD:
            allOf: # name is required, slug is optional and id is not available
                - $ref: '#/components/schemas/taskItem'
                - type: object
                - required: [id, name, description, dueDate, user]
                - properties:
                      id:
                          type: number
                          example: 32
